{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","allTodos","App","useState","addTodos","isValid","setIsValid","inputText","setInputText","inputUserId","setInputUserId","maxId","Math","max","el","action","method","onSubmit","event","preventDefault","trim","newTodo","type","value","onChange","target","Number","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16200af8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed !== true || 'TodoInfo--completed'}`}\n      key={todo.title + todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      { todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/user';\nimport { Todo } from './types/todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const desiredUser = usersFromServer.find(user => userId === user.id);\n\n  return desiredUser || null;\n}\n\nconst allTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, addTodos] = useState(allTodos);\n  const [isValid, setIsValid] = useState(true);\n  const [inputText, setInputText] = useState('');\n  const [inputUserId, setInputUserId] = useState(-1);\n\n  let maxId = Math.max(...todos.map(el => el.id)) + 1;\n\n  function handleSubmitForm(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (inputText.trim() === '' || inputUserId === -1) {\n      setIsValid(false);\n\n      return;\n    }\n\n    setIsValid(true);\n    maxId += 1;\n\n    const newTodo: Todo = {\n      id: maxId,\n      title: inputText,\n      completed: false,\n      user: getUserById(inputUserId),\n    };\n\n    addTodos([...todos, newTodo]);\n\n    setInputUserId(-1);\n    setInputText('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmitForm}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={inputText}\n            onChange={(event) => {\n              setInputText(event.target.value);\n            }}\n          />\n          {!isValid\n            && (inputText !== ''\n            || (<span className=\"error\">Please enter a title</span>))}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={inputUserId}\n            onChange={(event) => {\n              setInputUserId(Number(event.target.value));\n            }}\n          >\n            <option\n              value=\"-1\"\n              defaultValue=\"-1\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.username}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isValid\n            && (inputUserId !== -1\n            || (<span className=\"error\">Please choose a user</span>))}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}